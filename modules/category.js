// Generated by CoffeeScript 1.4.0
(function() {

  module.exports = function(settings) {
    var Category;
    Category = (function() {

      function Category(settings) {
        this.category = settings.mongoose.model('category');
        this.helper = (require(__dirname + '/helper'))();
        this.cats = [];
      }

      Category.prototype.refresh = function(category, callback) {
        var link,
          _this = this;
        link = this.helper.linkify(category);
        return this.category.findOne({
          permaLink: link
        }, function(err, data) {
          var cat, found, _i, _len, _ref;
          found = false;
          _ref = _this.cats;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            cat = _ref[_i];
            if (cat === category) {
              found = true;
            }
          }
          if (data === null && !found) {
            category = new _this.category({
              title: category.trim(),
              permaLink: link
            });
            return category.save(function(err, data) {
              return callback(data._id);
            });
          } else {
            return callback(data._id);
          }
        });
      };

      Category.prototype.all = function(callback) {
        return this.category.find(function(err, data) {
          return callback(data);
        });
      };

      Category.prototype.clear = function(callback) {
        return this.category.remove(function() {
          return callback();
        });
      };

      return Category;

    })();
    return new Category(settings);
  };

}).call(this);
