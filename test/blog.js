// Generated by CoffeeScript 1.4.0
(function() {
  var blog, helper;

  require('should');

  helper = (require('../modules/helper'))();

  blog = require(__dirname + '/init');

  describe('Blog', function() {
    describe('findPost', function() {
      var expected, _id;
      expected = 'test post';
      _id = '';
      beforeEach(function(done) {
        var promise,
          _this = this;
        promise = blog.create({
          title: expected,
          author: 'Mehfuz Hossain',
          body: 'Empty body'
        });
        return promise.then(function(result) {
          _id = result._id;
          return done();
        });
      });
      it('should return expected for permaLink', function(done) {
        var promise;
        promise = blog.findPost(helper.linkify('test post'));
        return promise.then(function(data) {
          data.post.title.should.equal(expected);
          console.log(data);
          return done();
        });
      });
      return afterEach(function(done) {
        return blog.deletePost(_id, function() {
          return done();
        });
      });
    });
    return describe('update post', function() {
      var expected, id;
      id = '';
      expected = 'test post';
      beforeEach(function(done) {
        var promise,
          _this = this;
        promise = blog.create({
          title: expected,
          author: 'Mehfuz Hossain',
          body: 'Empty body'
        });
        return promise.then(function(result) {
          id = result._id;
          return done();
        });
      });
      it('should update the permalink', function(done) {
        var promise,
          _this = this;
        promise = blog.updatePost({
          id: id,
          title: 'updated post',
          body: 'nothing'
        });
        return promise.then(function(result) {
          result.permaLink.should.equal(helper.linkify('updated post'));
          return done();
        });
      });
      return afterEach(function(done) {
        return blog.deletePost(id, function() {
          return done();
        });
      });
    });
  });

}).call(this);
